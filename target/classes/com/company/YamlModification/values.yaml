# Default values for nifi-standalone.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: artifactory.cloud.modeln.com/dck-nifi/modn-nifi
  pullPolicy: IfNotPresent
  tag: "1.14.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
nodeLabel: "nifi-standalone"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  flowName: "undefined"
  tenantId: "undefined"
  serviceArea: "Validata"
  instanceType: "nifi-standalone"

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  suffix: svc

bootstrap:
  minHeap: -Xms512m
  maxHeap: -Xmx512m

zookeeper:
  enabled: false
  connectString: localhost:2181
  rootNode: /nifi
  sessionTimeout: 10

filebeat:
  image:
    name: "docker.elastic.co/beats/filebeat"
    tag: 7.16.0
    pullPolicy: IfNotPresent

logging:
  enabled: false
  image:
    repository: artifactory.cloud.modeln.com/dck-ahm-release/ahm-appmon-agent
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "2021.2.0.0-SNAPSHOT-c73b274"
  level: info
  output:
    hosts:
      logstash: "graylog001.lan:5044"
  env:
    GRAYLOG_API_URL: "http://127.0.0.1:9000/api/"
    GRAYLOG_API_TOKEN: "TBD"
    # SIDECAR_NODE_NAME: {{ .Release.Name }}
    # SIDECAR_NODE_ID: {{ .Release.Name }}


nifi:
  isSecure: false
  http:
    host:
    port: 8080
  https:
    host:
    port:
  sensitivePropsKey: ABCDE1234567890
  security:
    keystore:
    keystoreType:
    keystorePasswd:
    keyPasswd:
    truststore:
    truststoreType:
    truststorePasswd:
    anonymousAuth: true
  cluster:
    isNode: false
    nodeAddress: localhost
    nodePort: 9990
    keyPasswd:
    truststore:
    truststoreType:
    truststorePasswd:
    anonymousAuth: true

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 1
    memory: 1Gi

logresources:
  limits:
    cpu: 0.5
    memory: 512Mi
  requests:
    cpu: 0.5
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}